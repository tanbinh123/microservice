#客户端微服务
spring.application.name=eureka-client-gateway
eureka.instance.hostname=client3
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone=http://server1:1001/eureka/,http://server2:1002/eureka/,http://server3:1003/eureka/
#服务器端口
server.port=2003

#redis
spring.redis.host=127.0.0.1
spring.redis.password=
spring.redis.port=6379

#当出现404错误时，直接抛出异常
spring.mvc.throw-exception-if-no-handler-found=true
#不要为我们工程中的资源文件建立映射
spring.resources.add-mappings=false

#gateway配置
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

#第一种：ws(websocket)方式：uri=ws://localhost:9000
#第二种：http方式：uri=http://localhost:8130/
#第三种：lb(注册中心中服务名字)方式：uri=lb://brilliance-consumer
#spring.cloud.gateway.routes[0].id=eureka-client-admin
#spring.cloud.gateway.routes[0].uri=lb://eureka-client-admin
#spring.cloud.gateway.routes[0].predicates=Path=/admin/**
#spring.cloud.gateway.routes[0].filters=StripPrefix=1
#令牌桶算法（lb方式好像对限流无效，可以自己用redis实现）
#spring.cloud.gateway.routes[0].filters.name=RequestRateLimiter
#spring.cloud.gateway.routes[0].filters.args.redis-rate-limiter.replenishRate=1
#spring.cloud.gateway.routes[0].filters.args.redis-rate-limiter.burstCapacity=2
#spring.cloud.gateway.routes[0].filters.args.key-resolver=#{@ipKeyResolver}

#404一定要放在最后
spring.cloud.gateway.routes[0].id=id_not_found
spring.cloud.gateway.routes[0].uri=forward:/notFound
spring.cloud.gateway.routes[0].predicates[0]=Path=/**